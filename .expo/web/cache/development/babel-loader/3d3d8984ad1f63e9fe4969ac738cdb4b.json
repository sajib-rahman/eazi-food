{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/restaurants/screens/RestaurantsScreen.js\";\n\nimport React, { useContext, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ActivityIndicator, Colors } from 'react-native-paper';\nimport styled from 'styled-components/native';\nimport { SafeArea } from \"../../../components/SafeArea/SafeArea\";\nimport { FadeInView } from \"../../../components/FadeInView/FadeInView\";\nimport { Spacer } from \"../../../components/Spacer/Spacer\";\nimport { CustomText as Text } from \"../../../components/CustomText/CustomText\";\nimport { Search } from \"../components/Search\";\nimport { FavouritesBar } from \"../../../components/FavouritesBar/FavouritesBar\";\nimport { RestaurantList } from \"../components/RestaurantList.styles\";\nimport { RestaurantInfoCard } from \"../components/RestaurantInfoCard\";\nimport { LocationContext } from \"../../../services/location/LocationContext\";\nimport { RestaurantsContext } from \"../../../services/restaurants/RestaurantsContext\";\nimport { FavouritesContext } from \"../../../services/favourites/FavouritesContext\";\nvar LoadingContainer = styled(View)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  top: 50%;\\n  left: 50%;\\n\"])));\nvar Loading = styled(ActivityIndicator)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-left: -25px;\\n\"])));\nexport var RestaurantsScreen = function RestaurantsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(LocationContext),\n      locationError = _useContext.error;\n\n  var _useContext2 = useContext(RestaurantsContext),\n      restaurants = _useContext2.restaurants,\n      isLoading = _useContext2.isLoading,\n      error = _useContext2.error;\n\n  var _useContext3 = useContext(FavouritesContext),\n      favourites = _useContext3.favourites;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isToggled = _useState2[0],\n      setIsToggled = _useState2[1];\n\n  var hasError = !!error || !!locationError;\n  return React.createElement(SafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, isLoading && React.createElement(LoadingContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(Loading, {\n    size: 50,\n    animating: true,\n    color: Colors.blue300,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), React.createElement(Search, {\n    isFavouritesToggled: isToggled,\n    onFavouritesToggle: function onFavouritesToggle() {\n      return setIsToggled(!isToggled);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), isToggled && React.createElement(FavouritesBar, {\n    favourites: favourites,\n    onNavigate: navigation.navigate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), hasError && React.createElement(Spacer, {\n    position: \"left\",\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    variant: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Something went wrong retrieving the data\")), !hasError && React.createElement(RestaurantList, {\n    data: restaurants,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('RestaurantDetail', {\n            restaurant: item\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, React.createElement(Spacer, {\n        position: \"bottom\",\n        size: \"large\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, React.createElement(FadeInView, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }\n      }, React.createElement(RestaurantInfoCard, {\n        restaurant: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }))));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.name;\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/restaurants/screens/RestaurantsScreen.js"],"names":["React","useContext","useState","ActivityIndicator","Colors","styled","SafeArea","FadeInView","Spacer","CustomText","Text","Search","FavouritesBar","RestaurantList","RestaurantInfoCard","LocationContext","RestaurantsContext","FavouritesContext","LoadingContainer","View","Loading","RestaurantsScreen","navigation","locationError","error","restaurants","isLoading","favourites","isToggled","setIsToggled","hasError","blue300","navigate","item","restaurant","name"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { View, TouchableOpacity } from 'react-native';\nimport { ActivityIndicator, Colors } from 'react-native-paper';\nimport styled from 'styled-components/native';\n\nimport { SafeArea } from '../../../components/SafeArea/SafeArea';\nimport { FadeInView } from '../../../components/FadeInView/FadeInView';\nimport { Spacer } from '../../../components/Spacer/Spacer';\nimport { CustomText as Text } from '../../../components/CustomText/CustomText';\nimport { Search } from '../components/Search';\nimport { FavouritesBar } from '../../../components/FavouritesBar/FavouritesBar';\nimport { RestaurantList } from '../components/RestaurantList.styles';\nimport { RestaurantInfoCard } from '../components/RestaurantInfoCard';\n\nimport { LocationContext } from '../../../services/location/LocationContext';\nimport { RestaurantsContext } from '../../../services/restaurants/RestaurantsContext';\nimport { FavouritesContext } from '../../../services/favourites/FavouritesContext';\n\nconst LoadingContainer = styled(View)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n`;\n\nconst Loading = styled(ActivityIndicator)`\n  margin-left: -25px;\n`;\n\nexport const RestaurantsScreen = ({ navigation }) => {\n  const { error: locationError } = useContext(LocationContext);\n  const { restaurants, isLoading, error } = useContext(RestaurantsContext);\n  const { favourites } = useContext(FavouritesContext);\n  const [isToggled, setIsToggled] = useState(false);\n  const hasError = !!error || !!locationError;\n\n  return (\n    <SafeArea>\n      {isLoading && (\n        <LoadingContainer>\n          <Loading size={50} animating={true} color={Colors.blue300} />\n        </LoadingContainer>\n      )}\n      <Search\n        isFavouritesToggled={isToggled}\n        onFavouritesToggle={() => setIsToggled(!isToggled)}\n      />\n      {isToggled && (\n        <FavouritesBar\n          favourites={favourites}\n          onNavigate={navigation.navigate}\n        />\n      )}\n      {hasError && (\n        <Spacer position=\"left\" size=\"large\">\n          <Text variant=\"error\">Something went wrong retrieving the data</Text>\n        </Spacer>\n      )}\n      {!hasError && (\n        <RestaurantList\n          data={restaurants}\n          renderItem={({ item }) => {\n            return (\n              <TouchableOpacity\n                onPress={() =>\n                  navigation.navigate('RestaurantDetail', { restaurant: item })\n                }\n              >\n                <Spacer position=\"bottom\" size=\"large\">\n                  <FadeInView>\n                    <RestaurantInfoCard restaurant={item} />\n                  </FadeInView>\n                </Spacer>\n              </TouchableOpacity>\n            );\n          }}\n          keyExtractor={(item) => item.name}\n        />\n      )}\n    </SafeArea>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}