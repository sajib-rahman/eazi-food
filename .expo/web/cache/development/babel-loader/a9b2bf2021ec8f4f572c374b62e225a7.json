{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/restaurants/components/RestaurantInfoCard.js\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { SvgXml } from 'react-native-svg';\nimport { Spacer } from \"../../../components/Spacer/Spacer\";\nimport { CustomText as Text } from \"../../../components/CustomText/CustomText\";\nimport { Favourite } from \"../../../components/Favourite/Favourite\";\nimport star from \"../../../../assets/icons/star\";\nimport open from \"../../../../assets/icons/open\";\nimport { RestaurantCard, RestaurantCardCover, Address, Info, Section, Rating, OperationStatus, Icon } from \"./RestaurantInfoCard.styles\";\nexport var RestaurantInfoCard = function RestaurantInfoCard(_ref) {\n  var _ref$restaurant = _ref.restaurant,\n      restaurant = _ref$restaurant === void 0 ? {} : _ref$restaurant;\n  var _restaurant$name = restaurant.name,\n      name = _restaurant$name === void 0 ? 'Sick Eats' : _restaurant$name,\n      _restaurant$icon = restaurant.icon,\n      icon = _restaurant$icon === void 0 ? 'https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/lodging-71.png' : _restaurant$icon,\n      _restaurant$photos = restaurant.photos,\n      photos = _restaurant$photos === void 0 ? ['https://images.unsplash.com/photo-1504674900247-0877df9cc836?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8Zm9vZHxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'] : _restaurant$photos,\n      _restaurant$address = restaurant.address,\n      address = _restaurant$address === void 0 ? '100 random sick avenue' : _restaurant$address,\n      _restaurant$isOpenNow = restaurant.isOpenNow,\n      isOpenNow = _restaurant$isOpenNow === void 0 ? true : _restaurant$isOpenNow,\n      _restaurant$rating = restaurant.rating,\n      rating = _restaurant$rating === void 0 ? 4 : _restaurant$rating,\n      _restaurant$isClosedT = restaurant.isClosedTemporarily,\n      isClosedTemporarily = _restaurant$isClosedT === void 0 ? true : _restaurant$isClosedT,\n      placeId = restaurant.placeId;\n  var ratingArray = Array.from(new Array(Math.floor(rating)));\n  return React.createElement(RestaurantCard, {\n    elevation: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Favourite, {\n    restaurant: restaurant,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), React.createElement(RestaurantCardCover, {\n    key: name,\n    source: {\n      uri: photos[0]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), React.createElement(Info, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    variant: \"label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, name), React.createElement(Section, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(Rating, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, ratingArray.map(function (_, index) {\n    return React.createElement(SvgXml, {\n      key: \"star-\" + placeId + \"-\" + index,\n      xml: star,\n      width: 20,\n      height: 20,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    });\n  })), React.createElement(OperationStatus, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, isClosedTemporarily && React.createElement(Text, {\n    variant: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"CLOSED TEMPORARILY\"), React.createElement(Spacer, {\n    position: \"left\",\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, isOpenNow && React.createElement(SvgXml, {\n    xml: open,\n    width: 20,\n    height: 20,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  })), React.createElement(Spacer, {\n    position: \"left\",\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    source: {\n      uri: icon\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })))), React.createElement(Address, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, address)));\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/restaurants/components/RestaurantInfoCard.js"],"names":["React","SvgXml","Spacer","CustomText","Text","Favourite","star","open","RestaurantCard","RestaurantCardCover","Address","Info","Section","Rating","OperationStatus","Icon","RestaurantInfoCard","restaurant","name","icon","photos","address","isOpenNow","rating","isClosedTemporarily","placeId","ratingArray","Array","from","Math","floor","uri","map","_","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View } from 'react-native';\nimport { SvgXml } from 'react-native-svg';\n\nimport { Spacer } from '../../../components/Spacer/Spacer';\nimport { CustomText as Text } from '../../../components/CustomText/CustomText';\nimport { Favourite } from '../../../components/Favourite/Favourite';\n\nimport star from '../../../../assets/icons/star';\nimport open from '../../../../assets/icons/open';\n\nimport {\n  RestaurantCard,\n  RestaurantCardCover,\n  Address,\n  Info,\n  Section,\n  Rating,\n  OperationStatus,\n  Icon,\n} from './RestaurantInfoCard.styles';\n\nexport const RestaurantInfoCard = ({ restaurant = {} }) => {\n  const {\n    name = 'Sick Eats',\n    icon = 'https://maps.gstatic.com/mapfiles/place_api/icons/v1/png_71/lodging-71.png',\n    photos = [\n      'https://images.unsplash.com/photo-1504674900247-0877df9cc836?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8Zm9vZHxlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\n    ],\n    address = '100 random sick avenue',\n    isOpenNow = true,\n    rating = 4,\n    isClosedTemporarily = true,\n    placeId,\n  } = restaurant;\n\n  const ratingArray = Array.from(new Array(Math.floor(rating)));\n\n  return (\n    <RestaurantCard elevation={2}>\n      <View>\n        <Favourite restaurant={restaurant} />\n        <RestaurantCardCover key={name} source={{ uri: photos[0] }} />\n      </View>\n      <Info>\n        <Text variant=\"label\">{name}</Text>\n        <Section>\n          <Rating>\n            {ratingArray.map((_, index) => (\n              <SvgXml\n                key={`star-${placeId}-${index}`}\n                xml={star}\n                width={20}\n                height={20}\n              />\n            ))}\n          </Rating>\n          <OperationStatus>\n            {isClosedTemporarily && (\n              <Text variant=\"error\">CLOSED TEMPORARILY</Text>\n            )}\n            <Spacer position=\"left\" size=\"large\">\n              {isOpenNow && <SvgXml xml={open} width={20} height={20} />}\n            </Spacer>\n            <Spacer position=\"left\" size=\"large\">\n              <Icon source={{ uri: icon }} />\n            </Spacer>\n          </OperationStatus>\n        </Section>\n        <Address>{address}</Address>\n      </Info>\n    </RestaurantCard>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}