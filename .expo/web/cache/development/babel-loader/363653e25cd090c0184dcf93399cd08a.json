{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport camelize from 'camelize';\nimport { host, isMock } from \"../../utils/env\";\nexport var restaurantsRequest = function restaurantsRequest(location) {\n  return fetch(host + \"/placesNearby?location=\" + location + \"&mock=\" + isMock).then(function (res) {\n    return res.json();\n  });\n};\nexport var restaurantsTransform = function restaurantsTransform(_ref) {\n  var _ref$results = _ref.results,\n      results = _ref$results === void 0 ? [] : _ref$results;\n  var mappedResults = results.map(function (restaurant) {\n    return _objectSpread(_objectSpread({}, restaurant), {}, {\n      address: restaurant.vicinity,\n      isOpenNow: restaurant.opening_hours && restaurant.opening_hours.open_now,\n      isClosedTemporarily: restaurant.business_status === 'CLOSED_TEMPORARILY'\n    });\n  });\n  return camelize(mappedResults);\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/services/restaurants/restaurants.service.js"],"names":["camelize","host","isMock","restaurantsRequest","location","fetch","then","res","json","restaurantsTransform","results","mappedResults","map","restaurant","address","vicinity","isOpenNow","opening_hours","open_now","isClosedTemporarily","business_status"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,IAAT,EAAeC,MAAf;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AAC9C,SAAOC,KAAK,CAAIJ,IAAJ,+BAAkCG,QAAlC,cAAmDF,MAAnD,CAAL,CAAkEI,IAAlE,CACL,UAACC,GAAD,EAAS;AACP,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,GAHI,CAAP;AAKD,CANM;AAQP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAsB;AAAA,0BAAnBC,OAAmB;AAAA,MAAnBA,OAAmB,6BAAT,EAAS;AACxD,MAAMC,aAAa,GAAGD,OAAO,CAACE,GAAR,CAAY,UAACC,UAAD,EAAgB;AAChD,2CACKA,UADL;AAEEC,MAAAA,OAAO,EAAED,UAAU,CAACE,QAFtB;AAGEC,MAAAA,SAAS,EAAEH,UAAU,CAACI,aAAX,IAA4BJ,UAAU,CAACI,aAAX,CAAyBC,QAHlE;AAIEC,MAAAA,mBAAmB,EAAEN,UAAU,CAACO,eAAX,KAA+B;AAJtD;AAMD,GAPqB,CAAtB;AASA,SAAOpB,QAAQ,CAACW,aAAD,CAAf;AACD,CAXM","sourcesContent":["import camelize from 'camelize';\nimport { host, isMock } from '../../utils/env';\n\nexport const restaurantsRequest = (location) => {\n  return fetch(`${host}/placesNearby?location=${location}&mock=${isMock}`).then(\n    (res) => {\n      return res.json();\n    }\n  );\n};\n\nexport const restaurantsTransform = ({ results = [] }) => {\n  const mappedResults = results.map((restaurant) => {\n    return {\n      ...restaurant,\n      address: restaurant.vicinity,\n      isOpenNow: restaurant.opening_hours && restaurant.opening_hours.open_now,\n      isClosedTemporarily: restaurant.business_status === 'CLOSED_TEMPORARILY',\n    };\n  });\n\n  return camelize(mappedResults);\n};\n"]},"metadata":{},"sourceType":"module"}