{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _this = this,\n    _jsxFileName = \"/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/components/CompactRestaurantInfo/CompactRestaurantInfo.js\";\n\nimport React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { WebView } from 'react-native-webview';\nimport styled from 'styled-components/native';\nimport { CustomText as Text } from \"../CustomText/CustomText\";\nvar CompactImage = styled(Image)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  border-radius: 10px;\\n  width: 120px;\\n  height: 100px;\\n\"])));\nvar CompactWebview = styled(WebView)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  border-radius: 10px;\\n  width: 120px;\\n  height: 100px;\\n\"])));\nvar Item = styled(View)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  padding: 10px;\\n  max-width: 120px;\\n  align-items: center;\\n\"])));\nvar isAndroid = Platform.OS === 'android';\nexport var CompactRestaurantInfo = function CompactRestaurantInfo(_ref) {\n  var restaurant = _ref.restaurant,\n      isMap = _ref.isMap;\n  var CustomImage = isAndroid && isMap ? CompactWebview : CompactImage;\n  return React.createElement(Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(CustomImage, {\n    source: {\n      uri: restaurant.photos[0]\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    center: true,\n    variant: \"caption\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, restaurant.name));\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/components/CompactRestaurantInfo/CompactRestaurantInfo.js"],"names":["React","WebView","styled","CustomText","Text","CompactImage","Image","CompactWebview","Item","View","isAndroid","Platform","OS","CompactRestaurantInfo","restaurant","isMap","CustomImage","uri","photos","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,OAAT,QAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,UAAU,IAAIC,IAAvB;AAEA,IAAMC,YAAY,GAAGH,MAAM,CAACI,KAAD,CAAT,uIAAlB;AAMA,IAAMC,cAAc,GAAGL,MAAM,CAACD,OAAD,CAAT,yIAApB;AAMA,IAAMO,IAAI,GAAGN,MAAM,CAACO,IAAD,CAAT,6IAAV;AAMA,IAAMC,SAAS,GAAGC,QAAQ,CAACC,EAAT,KAAgB,SAAlC;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC9D,MAAMC,WAAW,GAAGN,SAAS,IAAIK,KAAb,GAAqBR,cAArB,GAAsCF,YAA1D;AAEA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAE;AAAEY,MAAAA,GAAG,EAAEH,UAAU,CAACI,MAAX,CAAkB,CAAlB;AAAP,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,MAAM,MAAZ;AAAa,IAAA,OAAO,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,UAAU,CAACK,IADd,CAFF,CADF;AAQD,CAXM","sourcesContent":["import React from 'react';\nimport { Image, View, Platform } from 'react-native';\nimport { WebView } from 'react-native-webview';\nimport styled from 'styled-components/native';\n\nimport { CustomText as Text } from '../CustomText/CustomText';\n\nconst CompactImage = styled(Image)`\n  border-radius: 10px;\n  width: 120px;\n  height: 100px;\n`;\n\nconst CompactWebview = styled(WebView)`\n  border-radius: 10px;\n  width: 120px;\n  height: 100px;\n`;\n\nconst Item = styled(View)`\n  padding: 10px;\n  max-width: 120px;\n  align-items: center;\n`;\n\nconst isAndroid = Platform.OS === 'android';\n\nexport const CompactRestaurantInfo = ({ restaurant, isMap }) => {\n  const CustomImage = isAndroid && isMap ? CompactWebview : CompactImage;\n\n  return (\n    <Item>\n      <CustomImage source={{ uri: restaurant.photos[0] }} />\n      <Text center variant=\"caption\">\n        {restaurant.name}\n      </Text>\n    </Item>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}