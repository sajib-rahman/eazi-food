{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/services/authentication/AuthenticationContext.js\";\n\nimport React, { useState, createContext } from 'react';\nimport * as firebase from 'firebase';\nimport { loginRequest } from \"./authentication.service\";\nexport var AuthenticationContext = createContext();\nexport var AuthenticationContextProvider = function AuthenticationContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  firebase.auth().onAuthStateChanged(function (usr) {\n    if (usr) {\n      setUser(usr);\n      setIsLoading(false);\n    }\n  });\n\n  var onLogin = function onLogin(email, password) {\n    setIsLoading(true);\n    loginRequest(email, password).then(function (u) {\n      setUser(u);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err.toString());\n    });\n  };\n\n  var onRegister = function onRegister(email, password, repeatedPassword) {\n    setIsLoading(true);\n\n    if (password !== repeatedPassword) {\n      setError('Error: Passwords do not match');\n      return;\n    }\n\n    firebase.auth().createUserWithEmailAndPassword(email, password).then(function (u) {\n      setUser(u);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err.toString());\n    });\n  };\n\n  var onLogout = function onLogout() {\n    setUser(null);\n    firebase.auth().signOut();\n  };\n\n  return React.createElement(AuthenticationContext.Provider, {\n    value: {\n      isAuthenticated: !!user,\n      isLoading: isLoading,\n      user: user,\n      error: error,\n      onLogin: onLogin,\n      onRegister: onRegister,\n      onLogout: onLogout\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/services/authentication/AuthenticationContext.js"],"names":["React","useState","createContext","firebase","loginRequest","AuthenticationContext","AuthenticationContextProvider","children","isLoading","setIsLoading","user","setUser","error","setError","auth","onAuthStateChanged","usr","onLogin","email","password","then","u","catch","err","toString","onRegister","repeatedPassword","createUserWithEmailAndPassword","onLogout","signOut","isAuthenticated"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AAEA,SAASC,YAAT;AAEA,OAAO,IAAMC,qBAAqB,GAAGH,aAAa,EAA3C;AAEP,OAAO,IAAMI,6BAA6B,GAAG,SAAhCA,6BAAgC,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC7D,kBAAkCN,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOO,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAAwBR,QAAQ,CAAC,IAAD,CAAhC;AAAA;AAAA,MAAOS,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BV,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOW,KAAP;AAAA,MAAcC,QAAd;;AAEAV,EAAAA,QAAQ,CAACW,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,GAAD,EAAS;AAC1C,QAAIA,GAAJ,EAAS;AACPL,MAAAA,OAAO,CAACK,GAAD,CAAP;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GALD;;AAOA,MAAMQ,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACnCV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAL,IAAAA,YAAY,CAACc,KAAD,EAAQC,QAAR,CAAZ,CACGC,IADH,CACQ,UAACC,CAAD,EAAO;AACXV,MAAAA,OAAO,CAACU,CAAD,CAAP;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAJH,EAKGa,KALH,CAKS,UAACC,GAAD,EAAS;AACdd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,MAAAA,QAAQ,CAACU,GAAG,CAACC,QAAJ,EAAD,CAAR;AACD,KARH;AASD,GAXD;;AAaA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACP,KAAD,EAAQC,QAAR,EAAkBO,gBAAlB,EAAuC;AACxDjB,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAIU,QAAQ,KAAKO,gBAAjB,EAAmC;AACjCb,MAAAA,QAAQ,CAAC,+BAAD,CAAR;AACA;AACD;;AAEDV,IAAAA,QAAQ,CACLW,IADH,GAEGa,8BAFH,CAEkCT,KAFlC,EAEyCC,QAFzC,EAGGC,IAHH,CAGQ,UAACC,CAAD,EAAO;AACXV,MAAAA,OAAO,CAACU,CAAD,CAAP;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KANH,EAOGa,KAPH,CAOS,UAACC,GAAD,EAAS;AACdd,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,MAAAA,QAAQ,CAACU,GAAG,CAACC,QAAJ,EAAD,CAAR;AACD,KAVH;AAWD,GAlBD;;AAoBA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBjB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAR,IAAAA,QAAQ,CAACW,IAAT,GAAgBe,OAAhB;AACD,GAHD;;AAKA,SACE,oBAAC,qBAAD,CAAuB,QAAvB;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,CAAC,CAACpB,IADd;AAELF,MAAAA,SAAS,EAATA,SAFK;AAGLE,MAAAA,IAAI,EAAJA,IAHK;AAILE,MAAAA,KAAK,EAALA,KAJK;AAKLK,MAAAA,OAAO,EAAPA,OALK;AAMLQ,MAAAA,UAAU,EAAVA,UANK;AAOLG,MAAAA,QAAQ,EAARA;AAPK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWGrB,QAXH,CADF;AAeD,CAjEM","sourcesContent":["import React, { useState, createContext } from 'react';\nimport * as firebase from 'firebase';\n\nimport { loginRequest } from './authentication.service';\n\nexport const AuthenticationContext = createContext();\n\nexport const AuthenticationContextProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(null);\n\n  firebase.auth().onAuthStateChanged((usr) => {\n    if (usr) {\n      setUser(usr);\n      setIsLoading(false);\n    }\n  });\n\n  const onLogin = (email, password) => {\n    setIsLoading(true);\n    loginRequest(email, password)\n      .then((u) => {\n        setUser(u);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setError(err.toString());\n      });\n  };\n\n  const onRegister = (email, password, repeatedPassword) => {\n    setIsLoading(true);\n    if (password !== repeatedPassword) {\n      setError('Error: Passwords do not match');\n      return;\n    }\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then((u) => {\n        setUser(u);\n        setIsLoading(false);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setError(err.toString());\n      });\n  };\n\n  const onLogout = () => {\n    setUser(null);\n    firebase.auth().signOut();\n  };\n\n  return (\n    <AuthenticationContext.Provider\n      value={{\n        isAuthenticated: !!user,\n        isLoading,\n        user,\n        error,\n        onLogin,\n        onRegister,\n        onLogout,\n      }}\n    >\n      {children}\n    </AuthenticationContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}