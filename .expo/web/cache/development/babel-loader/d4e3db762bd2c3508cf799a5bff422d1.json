{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/services/favourites/FavouritesContext.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AuthenticationContext } from \"../authentication/AuthenticationContext\";\nexport var FavouritesContext = createContext();\nexport var FavouritesContextProvider = function FavouritesContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useContext = useContext(AuthenticationContext),\n      user = _useContext.user;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      favourites = _useState2[0],\n      setFavourites = _useState2[1];\n\n  var saveFavourites = function saveFavourites(value, uid) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function saveFavourites$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            jsonValue = JSON.stringify(value);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@favourites-\" + uid, jsonValue));\n\n          case 4:\n            _context.next = 9;\n            break;\n\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](0);\n            console.log('error saving favourites session', _context.t0);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 6]], Promise);\n  };\n\n  var loadFavourites = function loadFavourites(uid) {\n    var jsonValue;\n    return _regeneratorRuntime.async(function loadFavourites$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@favourites-\" + uid));\n\n          case 3:\n            jsonValue = _context2.sent;\n            return _context2.abrupt(\"return\", jsonValue !== null ? setFavourites(JSON.parse(jsonValue)) : null);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log('error loading favourites session', _context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var add = function add(restaurant) {\n    setFavourites([].concat(_toConsumableArray(favourites), [restaurant]));\n  };\n\n  var remove = function remove(restaurant) {\n    var newFavourites = favourites.filter(function (x) {\n      return x.placeId !== restaurant.placeId;\n    });\n    setFavourites(newFavourites);\n  };\n\n  useEffect(function () {\n    if (user) {\n      loadFavourites(user.uid);\n    }\n  }, [user]);\n  useEffect(function () {\n    if (user) {\n      saveFavourites(favourites, user.uid);\n    }\n  }, [favourites, user]);\n  return React.createElement(FavouritesContext.Provider, {\n    value: {\n      favourites: favourites,\n      addToFavourites: add,\n      removeFromFavourites: remove\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/services/favourites/FavouritesContext.js"],"names":["React","createContext","useContext","useState","useEffect","AsyncStorage","AuthenticationContext","FavouritesContext","FavouritesContextProvider","children","user","favourites","setFavourites","saveFavourites","value","uid","jsonValue","JSON","stringify","setItem","console","log","loadFavourites","getItem","parse","add","restaurant","remove","newFavourites","filter","x","placeId","addToFavourites","removeFromFavourites"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,QAA3C,EAAqDC,SAArD,QAAsE,OAAtE;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,SAASC,qBAAT;AAEA,OAAO,IAAMC,iBAAiB,GAAGN,aAAa,EAAvC;AAEP,OAAO,IAAMO,yBAAyB,GAAG,SAA5BA,yBAA4B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACzD,oBAAiBP,UAAU,CAACI,qBAAD,CAA3B;AAAA,MAAQI,IAAR,eAAQA,IAAR;;AACA,kBAAoCP,QAAQ,CAAC,EAAD,CAA5C;AAAA;AAAA,MAAOQ,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,KAAP,EAAcC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEbC,YAAAA,SAFa,GAEDC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAFC;AAAA;AAAA,6CAGbT,YAAY,CAACc,OAAb,kBAAoCJ,GAApC,EAA2CC,SAA3C,CAHa;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAKnBI,YAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AASA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAOP,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEKV,YAAY,CAACkB,OAAb,kBAAoCR,GAApC,CAFL;;AAAA;AAEbC,YAAAA,SAFa;AAAA,8CAGZA,SAAS,KAAK,IAAd,GAAqBJ,aAAa,CAACK,IAAI,CAACO,KAAL,CAAWR,SAAX,CAAD,CAAlC,GAA4D,IAHhD;;AAAA;AAAA;AAAA;AAKnBI,YAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;;AALmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AASA,MAAMI,GAAG,GAAG,SAANA,GAAM,CAACC,UAAD,EAAgB;AAC1Bd,IAAAA,aAAa,8BAAKD,UAAL,IAAiBe,UAAjB,GAAb;AACD,GAFD;;AAIA,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACD,UAAD,EAAgB;AAC7B,QAAME,aAAa,GAAGjB,UAAU,CAACkB,MAAX,CACpB,UAACC,CAAD;AAAA,aAAOA,CAAC,CAACC,OAAF,KAAcL,UAAU,CAACK,OAAhC;AAAA,KADoB,CAAtB;AAIAnB,IAAAA,aAAa,CAACgB,aAAD,CAAb;AACD,GAND;;AAQAxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIM,IAAJ,EAAU;AACRY,MAAAA,cAAc,CAACZ,IAAI,CAACK,GAAN,CAAd;AACD;AACF,GAJQ,EAIN,CAACL,IAAD,CAJM,CAAT;AAMAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIM,IAAJ,EAAU;AACRG,MAAAA,cAAc,CAACF,UAAD,EAAaD,IAAI,CAACK,GAAlB,CAAd;AACD;AACF,GAJQ,EAIN,CAACJ,UAAD,EAAaD,IAAb,CAJM,CAAT;AAMA,SACE,oBAAC,iBAAD,CAAmB,QAAnB;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAVA,UAAF;AAAcqB,MAAAA,eAAe,EAAEP,GAA/B;AAAoCQ,MAAAA,oBAAoB,EAAEN;AAA1D,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGlB,QAHH,CADF;AAOD,CArDM","sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport { AuthenticationContext } from '../authentication/AuthenticationContext';\n\nexport const FavouritesContext = createContext();\n\nexport const FavouritesContextProvider = ({ children }) => {\n  const { user } = useContext(AuthenticationContext);\n  const [favourites, setFavourites] = useState([]);\n\n  const saveFavourites = async (value, uid) => {\n    try {\n      const jsonValue = JSON.stringify(value);\n      await AsyncStorage.setItem(`@favourites-${uid}`, jsonValue);\n    } catch (err) {\n      console.log('error saving favourites session', err);\n    }\n  };\n\n  const loadFavourites = async (uid) => {\n    try {\n      const jsonValue = await AsyncStorage.getItem(`@favourites-${uid}`);\n      return jsonValue !== null ? setFavourites(JSON.parse(jsonValue)) : null;\n    } catch (err) {\n      console.log('error loading favourites session', err);\n    }\n  };\n\n  const add = (restaurant) => {\n    setFavourites([...favourites, restaurant]);\n  };\n\n  const remove = (restaurant) => {\n    const newFavourites = favourites.filter(\n      (x) => x.placeId !== restaurant.placeId\n    );\n\n    setFavourites(newFavourites);\n  };\n\n  useEffect(() => {\n    if (user) {\n      loadFavourites(user.uid);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (user) {\n      saveFavourites(favourites, user.uid);\n    }\n  }, [favourites, user]);\n\n  return (\n    <FavouritesContext.Provider\n      value={{ favourites, addToFavourites: add, removeFromFavourites: remove }}\n    >\n      {children}\n    </FavouritesContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}