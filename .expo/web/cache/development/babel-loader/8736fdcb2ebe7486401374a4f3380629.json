{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/services/restaurants/RestaurantsContext.js\";\n\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport { restaurantsRequest, restaurantsTransform } from \"./restaurants.service\";\nimport { LocationContext } from \"../location/LocationContext\";\nexport var RestaurantsContext = createContext();\nexport var RestaurantsContextProvider = function RestaurantsContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      restaurants = _useState2[0],\n      setRestaurants = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var _useContext = useContext(LocationContext),\n      location = _useContext.location;\n\n  var retrieveRestaurants = function retrieveRestaurants(loc) {\n    setIsLoading(true);\n    setRestaurants([]);\n    restaurantsRequest(loc).then(restaurantsTransform).then(function (results) {\n      setError(null);\n      setIsLoading(false);\n      setRestaurants(results);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err);\n    });\n  };\n\n  useEffect(function () {\n    if (location) {\n      var locationString = location.lat + \",\" + location.lng;\n      retrieveRestaurants(locationString);\n    }\n  }, [location]);\n  return React.createElement(RestaurantsContext.Provider, {\n    value: {\n      restaurants: restaurants,\n      isLoading: isLoading,\n      error: error\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/services/restaurants/RestaurantsContext.js"],"names":["React","useState","useEffect","createContext","useContext","restaurantsRequest","restaurantsTransform","LocationContext","RestaurantsContext","RestaurantsContextProvider","children","restaurants","setRestaurants","isLoading","setIsLoading","error","setError","location","retrieveRestaurants","loc","then","results","catch","err","locationString","lat","lng"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,EAAoDC,UAApD,QAAsE,OAAtE;AAEA,SACEC,kBADF,EAEEC,oBAFF;AAKA,SAASC,eAAT;AAEA,OAAO,IAAMC,kBAAkB,GAAGL,aAAa,EAAxC;AAEP,OAAO,IAAMM,0BAA0B,GAAG,SAA7BA,0BAA6B,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAC1D,kBAAsCT,QAAQ,CAAC,EAAD,CAA9C;AAAA;AAAA,MAAOU,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAAkCX,QAAQ,CAAC,KAAD,CAA1C;AAAA;AAAA,MAAOY,SAAP;AAAA,MAAkBC,YAAlB;;AACA,mBAA0Bb,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAcC,QAAd;;AACA,oBAAqBZ,UAAU,CAACG,eAAD,CAA/B;AAAA,MAAQU,QAAR,eAAQA,QAAR;;AAEA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,GAAD,EAAS;AACnCL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAF,IAAAA,cAAc,CAAC,EAAD,CAAd;AAEAP,IAAAA,kBAAkB,CAACc,GAAD,CAAlB,CACGC,IADH,CACQd,oBADR,EAEGc,IAFH,CAEQ,UAACC,OAAD,EAAa;AACjBL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,MAAAA,cAAc,CAACS,OAAD,CAAd;AACD,KANH,EAOGC,KAPH,CAOS,UAACC,GAAD,EAAS;AACdT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,QAAQ,CAACO,GAAD,CAAR;AACD,KAVH;AAWD,GAfD;;AAiBArB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIe,QAAJ,EAAc;AACZ,UAAMO,cAAc,GAAMP,QAAQ,CAACQ,GAAf,SAAsBR,QAAQ,CAACS,GAAnD;AACAR,MAAAA,mBAAmB,CAACM,cAAD,CAAnB;AACD;AACF,GALQ,EAKN,CAACP,QAAD,CALM,CAAT;AAOA,SACE,oBAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAE;AAAEN,MAAAA,WAAW,EAAXA,WAAF;AAAeE,MAAAA,SAAS,EAATA,SAAf;AAA0BE,MAAAA,KAAK,EAALA;AAA1B,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QADH,CADF;AAKD,CAnCM","sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\n\nimport {\n  restaurantsRequest,\n  restaurantsTransform,\n} from './restaurants.service';\n\nimport { LocationContext } from '../location/LocationContext';\n\nexport const RestaurantsContext = createContext();\n\nexport const RestaurantsContextProvider = ({ children }) => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { location } = useContext(LocationContext);\n\n  const retrieveRestaurants = (loc) => {\n    setIsLoading(true);\n    setRestaurants([]);\n\n    restaurantsRequest(loc)\n      .then(restaurantsTransform)\n      .then((results) => {\n        setError(null);\n        setIsLoading(false);\n        setRestaurants(results);\n      })\n      .catch((err) => {\n        setIsLoading(false);\n        setError(err);\n      });\n  };\n\n  useEffect(() => {\n    if (location) {\n      const locationString = `${location.lat},${location.lng}`;\n      retrieveRestaurants(locationString);\n    }\n  }, [location]);\n\n  return (\n    <RestaurantsContext.Provider value={{ restaurants, isLoading, error }}>\n      {children}\n    </RestaurantsContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}