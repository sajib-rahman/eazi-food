{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/checkout/components/CreditCardInput.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport { LiteCreditCardInput } from 'react-native-credit-card-input';\nimport { cardTokenRequest } from \"../../../services/checkout/checkout.service\";\nexport var CreditCardInput = function CreditCardInput(_ref) {\n  var name = _ref.name,\n      onSuccess = _ref.onSuccess,\n      onError = _ref.onError;\n\n  var onChange = function onChange(formData) {\n    var values, status, isIncomplete, expiry, card, info;\n    return _regeneratorRuntime.async(function onChange$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            values = formData.values, status = formData.status;\n            isIncomplete = Object.values(status).includes('incomplete');\n            expiry = values.expiry.split('/');\n            card = {\n              number: values.number,\n              exp_month: expiry[0],\n              exp_year: expiry[1],\n              cvc: values.cvc,\n              name: name\n            };\n\n            if (isIncomplete) {\n              _context.next = 15;\n              break;\n            }\n\n            _context.prev = 5;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(cardTokenRequest(card));\n\n          case 8:\n            info = _context.sent;\n            onSuccess(info);\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](5);\n            onError();\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[5, 12]], Promise);\n  };\n\n  return React.createElement(LiteCreditCardInput, {\n    onChange: onChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  });\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/checkout/components/CreditCardInput.js"],"names":["React","LiteCreditCardInput","cardTokenRequest","CreditCardInput","name","onSuccess","onError","onChange","formData","values","status","isIncomplete","Object","includes","expiry","split","card","number","exp_month","exp_year","cvc","info"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,gCAApC;AAEA,SAASC,gBAAT;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAkC;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAC/D,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,MADO,GACYD,QADZ,CACPC,MADO,EACCC,MADD,GACYF,QADZ,CACCE,MADD;AAETC,YAAAA,YAFS,GAEMC,MAAM,CAACH,MAAP,CAAcC,MAAd,EAAsBG,QAAtB,CAA+B,YAA/B,CAFN;AAGTC,YAAAA,MAHS,GAGAL,MAAM,CAACK,MAAP,CAAcC,KAAd,CAAoB,GAApB,CAHA;AAKTC,YAAAA,IALS,GAKF;AACXC,cAAAA,MAAM,EAAER,MAAM,CAACQ,MADJ;AAEXC,cAAAA,SAAS,EAAEJ,MAAM,CAAC,CAAD,CAFN;AAGXK,cAAAA,QAAQ,EAAEL,MAAM,CAAC,CAAD,CAHL;AAIXM,cAAAA,GAAG,EAAEX,MAAM,CAACW,GAJD;AAKXhB,cAAAA,IAAI,EAAEA;AALK,aALE;;AAAA,gBAaVO,YAbU;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,6CAeQT,gBAAgB,CAACc,IAAD,CAfxB;;AAAA;AAeLK,YAAAA,IAfK;AAgBXhB,YAAAA,SAAS,CAACgB,IAAD,CAAT;AAhBW;AAAA;;AAAA;AAAA;AAAA;AAkBXf,YAAAA,OAAO;;AAlBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAuBA,SAAO,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAzBM","sourcesContent":["import React from 'react';\nimport { LiteCreditCardInput } from 'react-native-credit-card-input';\n\nimport { cardTokenRequest } from '../../../services/checkout/checkout.service';\n\nexport const CreditCardInput = ({ name, onSuccess, onError }) => {\n  const onChange = async (formData) => {\n    const { values, status } = formData;\n    const isIncomplete = Object.values(status).includes('incomplete');\n    const expiry = values.expiry.split('/');\n\n    const card = {\n      number: values.number,\n      exp_month: expiry[0],\n      exp_year: expiry[1],\n      cvc: values.cvc,\n      name: name,\n    };\n\n    if (!isIncomplete) {\n      try {\n        const info = await cardTokenRequest(card);\n        onSuccess(info);\n      } catch (err) {\n        onError();\n      }\n    }\n  };\n\n  return <LiteCreditCardInput onChange={onChange} />;\n};\n"]},"metadata":{},"sourceType":"module"}