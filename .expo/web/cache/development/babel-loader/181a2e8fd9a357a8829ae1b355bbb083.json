{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _this = this,\n    _jsxFileName = \"/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/settings/screens/SettingsScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState, useCallback } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { List, Avatar } from 'react-native-paper';\nimport { useFocusEffect } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport styled from 'styled-components/native';\nimport { SafeArea } from \"../../../components/SafeArea/SafeArea\";\nimport { Spacer } from \"../../../components/Spacer/Spacer\";\nimport { CustomText as Text } from \"../../../components/CustomText/CustomText\";\nimport { colors } from \"../../../infrastructure/theme/colors\";\nimport { AuthenticationContext } from \"../../../services/authentication/AuthenticationContext\";\nvar SettingsBackground = styled(ImageBackground).attrs({\n  source: require(\"../../../../assets/images/homepage_bg.jpg\")\n})(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  height: 100%;\\n  width: 100%;\\n\"])));\nvar TransparentSafeArea = styled(SafeArea)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  background-color: transparent;\\n\"])));\nvar SettingsItem = styled(List.Item)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  padding: \", \";\\n  background-color: rgba(255, 255, 255, 0.4);\\n\"])), function (props) {\n  return props.theme.space[3];\n});\nvar AvatarContainer = styled(View)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  align-items: center;\\n\"])));\nexport var SettingsScreen = function SettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useContext = useContext(AuthenticationContext),\n      onLogout = _useContext.onLogout,\n      user = _useContext.user;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      photo = _useState2[0],\n      setPhoto = _useState2[1];\n\n  var getProfilePicture = function getProfilePicture(currentUser) {\n    var photoUri;\n    return _regeneratorRuntime.async(function getProfilePicture$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(currentUser.uid + \"-photo\"));\n\n          case 2:\n            photoUri = _context.sent;\n            setPhoto(photoUri);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useFocusEffect(useCallback(function () {\n    getProfilePicture(user);\n  }, [user]));\n  return React.createElement(SettingsBackground, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(TransparentSafeArea, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(AvatarContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Camera');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, !photo && React.createElement(Avatar.Icon, {\n    size: 180,\n    icon: \"account-circle\",\n    backgroundColor: colors.brand.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), photo && React.createElement(Avatar.Image, {\n    size: 180,\n    source: {\n      uri: photo\n    },\n    backgroundColor: colors.brand.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  })), React.createElement(Spacer, {\n    position: \"top\",\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    variant: \"label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, user.email))), React.createElement(List.Section, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(SettingsItem, {\n    title: \"Favourites\",\n    description: \"View your favourites\",\n    onPress: function onPress() {\n      return navigation.navigate('Favourites');\n    },\n    left: function left(props) {\n      return React.createElement(List.Icon, _extends({}, props, {\n        color: colors.ui.error,\n        icon: \"heart\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), React.createElement(Spacer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), React.createElement(SettingsItem, {\n    title: \"Logout\",\n    onPress: onLogout,\n    left: function left(props) {\n      return React.createElement(List.Icon, _extends({}, props, {\n        color: colors.ui.secondary,\n        icon: \"logout\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/settings/screens/SettingsScreen.js"],"names":["React","useContext","useState","useCallback","List","Avatar","useFocusEffect","AsyncStorage","styled","SafeArea","Spacer","CustomText","Text","colors","AuthenticationContext","SettingsBackground","ImageBackground","attrs","source","require","TransparentSafeArea","SettingsItem","Item","props","theme","space","AvatarContainer","View","SettingsScreen","navigation","onLogout","user","photo","setPhoto","getProfilePicture","currentUser","getItem","uid","photoUri","navigate","brand","primary","uri","email","ui","error","secondary"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useCallback } from 'react';\nimport { ImageBackground, TouchableOpacity, View } from 'react-native';\nimport { List, Avatar } from 'react-native-paper';\nimport { useFocusEffect } from '@react-navigation/native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport styled from 'styled-components/native';\n\nimport { SafeArea } from '../../../components/SafeArea/SafeArea';\nimport { Spacer } from '../../../components/Spacer/Spacer';\nimport { CustomText as Text } from '../../../components/CustomText/CustomText';\nimport { colors } from '../../../infrastructure/theme/colors';\n\nimport { AuthenticationContext } from '../../../services/authentication/AuthenticationContext';\n\nconst SettingsBackground = styled(ImageBackground).attrs({\n  source: require('../../../../assets/images/homepage_bg.jpg'),\n})`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n`;\n\nconst TransparentSafeArea = styled(SafeArea)`\n  background-color: transparent;\n`;\n\nconst SettingsItem = styled(List.Item)`\n  padding: ${(props) => props.theme.space[3]};\n  background-color: rgba(255, 255, 255, 0.4);\n`;\n\nconst AvatarContainer = styled(View)`\n  align-items: center;\n`;\n\nexport const SettingsScreen = ({ navigation }) => {\n  const { onLogout, user } = useContext(AuthenticationContext);\n  const [photo, setPhoto] = useState(null);\n\n  const getProfilePicture = async (currentUser) => {\n    const photoUri = await AsyncStorage.getItem(`${currentUser.uid}-photo`);\n    setPhoto(photoUri);\n  };\n\n  useFocusEffect(\n    useCallback(() => {\n      getProfilePicture(user);\n    }, [user])\n  );\n\n  return (\n    <SettingsBackground>\n      <TransparentSafeArea>\n        <AvatarContainer>\n          <TouchableOpacity onPress={() => navigation.navigate('Camera')}>\n            {!photo && (\n              <Avatar.Icon\n                size={180}\n                icon=\"account-circle\"\n                backgroundColor={colors.brand.primary}\n              />\n            )}\n            {photo && (\n              <Avatar.Image\n                size={180}\n                source={{ uri: photo }}\n                backgroundColor={colors.brand.primary}\n              />\n            )}\n          </TouchableOpacity>\n          <Spacer position=\"top\" size=\"large\">\n            <Text variant=\"label\">{user.email}</Text>\n          </Spacer>\n        </AvatarContainer>\n        <List.Section>\n          <SettingsItem\n            title=\"Favourites\"\n            description=\"View your favourites\"\n            onPress={() => navigation.navigate('Favourites')}\n            left={(props) => (\n              <List.Icon {...props} color={colors.ui.error} icon=\"heart\" />\n            )}\n          />\n          <Spacer />\n          <SettingsItem\n            title=\"Logout\"\n            onPress={onLogout}\n            left={(props) => (\n              <List.Icon {...props} color={colors.ui.secondary} icon=\"logout\" />\n            )}\n          />\n        </List.Section>\n      </TransparentSafeArea>\n    </SettingsBackground>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}