{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/account/screens/RegisterScreen.js\";\n\nimport React, { useState, useContext } from 'react';\nimport { ActivityIndicator, Colors } from 'react-native-paper';\nimport { AccountBackground, AccountCover, AccountContainer, AuthButton, AuthInput, Title, ErrorContainer } from \"../components/Account.styles\";\nimport { Spacer } from \"../../../components/Spacer/Spacer\";\nimport { CustomText as Text } from \"../../../components/CustomText/CustomText\";\nimport { AuthenticationContext } from \"../../../services/authentication/AuthenticationContext\";\nexport var RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      repeatedPassword = _useState6[0],\n      setRepeatedPassword = _useState6[1];\n\n  var _useContext = useContext(AuthenticationContext),\n      onRegister = _useContext.onRegister,\n      isLoading = _useContext.isLoading,\n      error = _useContext.error;\n\n  return React.createElement(AccountBackground, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, React.createElement(AccountCover, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(Title, {\n    variant: \"caption\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"YumMeals\"), React.createElement(AccountContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(AuthInput, {\n    label: \"E-mail\",\n    value: email,\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(userEmail) {\n      return setEmail(userEmail);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), React.createElement(Spacer, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(AuthInput, {\n    label: \"Password\",\n    value: password,\n    textContentType: \"password\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(userPass) {\n      return setPassword(userPass);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), React.createElement(Spacer, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(AuthInput, {\n    label: \"Repeat Password\",\n    value: repeatedPassword,\n    textContentType: \"password\",\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(userPass) {\n      return setRepeatedPassword(userPass);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), error && React.createElement(ErrorContainer, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    variant: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, error)), React.createElement(Spacer, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, !isLoading ? React.createElement(AuthButton, {\n    icon: \"email\",\n    mode: \"contained\",\n    onPress: function onPress() {\n      return onRegister(email, password, repeatedPassword);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Register\") : React.createElement(ActivityIndicator, {\n    animating: true,\n    color: Colors.blue300,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), React.createElement(Spacer, {\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(AuthButton, {\n    mode: \"contained\",\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Back\")));\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/features/account/screens/RegisterScreen.js"],"names":["React","useState","useContext","ActivityIndicator","Colors","AccountBackground","AccountCover","AccountContainer","AuthButton","AuthInput","Title","ErrorContainer","Spacer","CustomText","Text","AuthenticationContext","RegisterScreen","navigation","email","setEmail","password","setPassword","repeatedPassword","setRepeatedPassword","onRegister","isLoading","error","userEmail","userPass","blue300","goBack"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { ActivityIndicator, Colors } from 'react-native-paper';\n\nimport {\n  AccountBackground,\n  AccountCover,\n  AccountContainer,\n  AuthButton,\n  AuthInput,\n  Title,\n  ErrorContainer,\n} from '../components/Account.styles';\nimport { Spacer } from '../../../components/Spacer/Spacer';\nimport { CustomText as Text } from '../../../components/CustomText/CustomText';\n\nimport { AuthenticationContext } from '../../../services/authentication/AuthenticationContext';\n\nexport const RegisterScreen = ({ navigation }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatedPassword, setRepeatedPassword] = useState('');\n  const { onRegister, isLoading, error } = useContext(AuthenticationContext);\n\n  return (\n    <AccountBackground>\n      <AccountCover />\n      <Title variant=\"caption\">YumMeals</Title>\n      <AccountContainer>\n        <AuthInput\n          label=\"E-mail\"\n          value={email}\n          textContentType=\"emailAddress\"\n          keyboardType=\"email-address\"\n          autoCapitalize=\"none\"\n          onChangeText={(userEmail) => setEmail(userEmail)}\n        />\n        <Spacer size=\"large\">\n          <AuthInput\n            label=\"Password\"\n            value={password}\n            textContentType=\"password\"\n            secureTextEntry\n            autoCapitalize=\"none\"\n            onChangeText={(userPass) => setPassword(userPass)}\n          />\n        </Spacer>\n        <Spacer size=\"large\">\n          <AuthInput\n            label=\"Repeat Password\"\n            value={repeatedPassword}\n            textContentType=\"password\"\n            secureTextEntry\n            autoCapitalize=\"none\"\n            onChangeText={(userPass) => setRepeatedPassword(userPass)}\n          />\n        </Spacer>\n        {error && (\n          <ErrorContainer size=\"large\">\n            <Text variant=\"error\">{error}</Text>\n          </ErrorContainer>\n        )}\n        <Spacer size=\"large\">\n          {!isLoading ? (\n            <AuthButton\n              icon=\"email\"\n              mode=\"contained\"\n              onPress={() => onRegister(email, password, repeatedPassword)}\n            >\n              Register\n            </AuthButton>\n          ) : (\n            <ActivityIndicator animating={true} color={Colors.blue300} />\n          )}\n        </Spacer>\n      </AccountContainer>\n      <Spacer size=\"large\">\n        <AuthButton mode=\"contained\" onPress={() => navigation.goBack()}>\n          Back\n        </AuthButton>\n      </Spacer>\n    </AccountBackground>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}