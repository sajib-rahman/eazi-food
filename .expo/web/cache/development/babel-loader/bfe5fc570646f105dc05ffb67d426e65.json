{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _templateObject;\n\nimport Text from \"react-native-web/dist/exports/Text\";\nimport styled from 'styled-components';\n\nvar defaultTextStyles = function defaultTextStyles(theme) {\n  return \"\\n  font-family: \" + theme.fonts.body + \";\\n  font-weight: \" + theme.fontWeights.regular + \";\\n  color: \" + theme.colors.text.primary + \";\\n  flex-wrap: wrap;\\n  margin-top: 0px;\\n  margin-bottom: 0px;\\n\";\n};\n\nvar body = function body(theme) {\n  return \"\\n  font-size: \" + theme.fontSizes.body + \";\\n\";\n};\n\nvar hint = function hint(theme) {\n  return \"\\n  font-size: \" + theme.fontSizes.body + \";\\n\";\n};\n\nvar error = function error(theme) {\n  return \"\\n  color: \" + theme.colors.text.error + \";\\n\";\n};\n\nvar caption = function caption(theme) {\n  return \"\\n  font-size: \" + theme.fontSizes.caption + \";\\n  font-weight: \" + theme.fontWeights.bold + \";\\n\";\n};\n\nvar label = function label(theme) {\n  return \"\\n  font-family: \" + theme.fonts.heading + \";\\n  font-size: \" + theme.fontSizes.body + \";\\n  font-weight: \" + theme.fontWeights.medium + \";\\n\";\n};\n\nvar variants = {\n  body: body,\n  hint: hint,\n  error: error,\n  label: label,\n  caption: caption\n};\nexport var CustomText = styled(Text)(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  \", \";\\n  \", \";\\n\"])), function (_ref) {\n  var theme = _ref.theme;\n  return defaultTextStyles(theme);\n}, function (_ref2) {\n  var variant = _ref2.variant,\n      theme = _ref2.theme;\n  return variants[variant](theme);\n});\nText.defaultProps = {\n  variant: 'body'\n};","map":{"version":3,"sources":["/Users/mdabdurrahman/Desktop/Mobile App/MOBILE APPLICATION PROJECT/PROJECT/P/src/components/CustomText/CustomText.js"],"names":["styled","defaultTextStyles","theme","fonts","body","fontWeights","regular","colors","text","primary","fontSizes","hint","error","caption","bold","label","heading","medium","variants","CustomText","Text","variant","defaultProps"],"mappings":";;;;;AACA,OAAOA,MAAP,MAAmB,mBAAnB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD;AAAA,+BACTA,KAAK,CAACC,KAAN,CAAYC,IADH,0BAETF,KAAK,CAACG,WAAN,CAAkBC,OAFT,oBAGfJ,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkBC,OAHH;AAAA,CAA1B;;AASA,IAAML,IAAI,GAAG,SAAPA,IAAO,CAACF,KAAD;AAAA,6BACEA,KAAK,CAACQ,SAAN,CAAgBN,IADlB;AAAA,CAAb;;AAIA,IAAMO,IAAI,GAAG,SAAPA,IAAO,CAACT,KAAD;AAAA,6BACEA,KAAK,CAACQ,SAAN,CAAgBN,IADlB;AAAA,CAAb;;AAIA,IAAMQ,KAAK,GAAG,SAARA,KAAQ,CAACV,KAAD;AAAA,yBACHA,KAAK,CAACK,MAAN,CAAaC,IAAb,CAAkBI,KADf;AAAA,CAAd;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACX,KAAD;AAAA,6BACDA,KAAK,CAACQ,SAAN,CAAgBG,OADf,0BAECX,KAAK,CAACG,WAAN,CAAkBS,IAFnB;AAAA,CAAhB;;AAKA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACb,KAAD;AAAA,+BACGA,KAAK,CAACC,KAAN,CAAYa,OADf,wBAECd,KAAK,CAACQ,SAAN,CAAgBN,IAFjB,0BAGGF,KAAK,CAACG,WAAN,CAAkBY,MAHrB;AAAA,CAAd;;AAMA,IAAMC,QAAQ,GAAG;AACfd,EAAAA,IAAI,EAAJA,IADe;AAEfO,EAAAA,IAAI,EAAJA,IAFe;AAGfC,EAAAA,KAAK,EAALA,KAHe;AAIfG,EAAAA,KAAK,EAALA,KAJe;AAKfF,EAAAA,OAAO,EAAPA;AALe,CAAjB;AAQA,OAAO,IAAMM,UAAU,GAAGnB,MAAM,CAACoB,IAAD,CAAT,+FACnB;AAAA,MAAGlB,KAAH,QAAGA,KAAH;AAAA,SAAeD,iBAAiB,CAACC,KAAD,CAAhC;AAAA,CADmB,EAEnB;AAAA,MAAGmB,OAAH,SAAGA,OAAH;AAAA,MAAYnB,KAAZ,SAAYA,KAAZ;AAAA,SAAwBgB,QAAQ,CAACG,OAAD,CAAR,CAAkBnB,KAAlB,CAAxB;AAAA,CAFmB,CAAhB;AAKPkB,IAAI,CAACE,YAAL,GAAoB;AAClBD,EAAAA,OAAO,EAAE;AADS,CAApB","sourcesContent":["import { Text } from 'react-native';\nimport styled from 'styled-components';\n\nconst defaultTextStyles = (theme) => `\n  font-family: ${theme.fonts.body};\n  font-weight: ${theme.fontWeights.regular};\n  color: ${theme.colors.text.primary};\n  flex-wrap: wrap;\n  margin-top: 0px;\n  margin-bottom: 0px;\n`;\n\nconst body = (theme) => `\n  font-size: ${theme.fontSizes.body};\n`;\n\nconst hint = (theme) => `\n  font-size: ${theme.fontSizes.body};\n`;\n\nconst error = (theme) => `\n  color: ${theme.colors.text.error};\n`;\n\nconst caption = (theme) => `\n  font-size: ${theme.fontSizes.caption};\n  font-weight: ${theme.fontWeights.bold};\n`;\n\nconst label = (theme) => `\n  font-family: ${theme.fonts.heading};\n  font-size: ${theme.fontSizes.body};\n  font-weight: ${theme.fontWeights.medium};\n`;\n\nconst variants = {\n  body,\n  hint,\n  error,\n  label,\n  caption,\n};\n\nexport const CustomText = styled(Text)`\n  ${({ theme }) => defaultTextStyles(theme)};\n  ${({ variant, theme }) => variants[variant](theme)};\n`;\n\nText.defaultProps = {\n  variant: 'body',\n};\n"]},"metadata":{},"sourceType":"module"}